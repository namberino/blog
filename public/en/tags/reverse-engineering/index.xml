<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reverse Engineering on Nam&#39;s Journal</title>
    <link>https://namberino.github.io/en/tags/reverse-engineering/</link>
    <description>Recent content in Reverse Engineering on Nam&#39;s Journal</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 22 Apr 2024 14:40:02 +0700</lastBuildDate>
    <atom:link href="https://namberino.github.io/en/tags/reverse-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Decrypting a Serial-To-WiFi device&#39;s firmware</title>
      <link>https://namberino.github.io/en/english/posts/firmware-decryption/</link>
      <pubDate>Mon, 22 Apr 2024 14:40:02 +0700</pubDate>
      <guid>https://namberino.github.io/en/english/posts/firmware-decryption/</guid>
      <description>I&amp;rsquo;ve been doing some research into reverse engineering for a while now. I&amp;rsquo;ve also been learning about firmware and embedded systems for a long time. And I thought &amp;ldquo;Wouldn&amp;rsquo;t it be cool to combine these to skills to do something?&amp;rdquo;. So I decided to try decrypting the encrypted firmware of the a Serial-To-WiFi device. I&amp;rsquo;ve documented my process here in this blog post.&#xA;The device I recently read that there was a vulnerability in the Moxa NPort W2150A Serial-To-Wifi device that exploit stack-based buffer overflow.</description>
    </item>
    <item>
      <title>ESXiArgs: An Analysis</title>
      <link>https://namberino.github.io/en/english/posts/esxiargs-analysis/</link>
      <pubDate>Mon, 01 Apr 2024 14:42:54 +0700</pubDate>
      <guid>https://namberino.github.io/en/english/posts/esxiargs-analysis/</guid>
      <description>Last year, a ransomware attack called ESXiArgs managed to encrypt hundreds of VMware machines in multiple different countries. And I decided to try my hands at reverse engineering and analyzing this malware to see how it works. So without further ado, let&amp;rsquo;s reverse this.&#xA;Note: The malware sample was provided by the bleepingcomputer forum&#xA;The script So right out of the gate, in the script, there&amp;rsquo;s a section called CHANGE CONFIG:</description>
    </item>
  </channel>
</rss>
